总体设计意图：
    同步两个文件夹，使两者文件内容、目录完全一致
代码逻辑：
    collect_files 收集文件夹所有的文件集合
    scan 归类应增加的文件、删除的文件、覆盖的文件
    ; 精简输出同步的文件
    back_up_files 同步文件【注1】
    back_up_emp_dirs 同步空目录【注2】
    ; 通过print_copy(del)_emp_dirs中的内容打印删掉的文件夹

【注1】:这里为什么先删除多余文件后拷贝呢?
        因为假设新添一个文件prefix/name,
        而老文件夹有一个独有的目录prefix/name,
        shutil.copy拷贝的结果将是prefix/name/name,
        这个问题可通过先执行删除所有多余文件,
        并在复制新文件时删除同名空目录得以解决.

        当然,拷贝的时候遇到文件夹同名时shutil.rmtree
        并在del_files集合中移去删除的文件名也行,
        只是没有上面一种方法好.

【注2】:注意:独有的空目录并不就是独有的目录,
        new_emp_dirs中的目录有可能在old_dir也存在,只不过非空.
        copy_emp_dirs在每次遇到空目录去同步同名非空目录时,
        用shutil.rmtree去除,同时去除del_emp_dirs中在该目录下的成员
        del_emp_dirs在每次删除空目录时,如果其父目录也为空了,
        则也将它加进来,直到全部删光多余目录.